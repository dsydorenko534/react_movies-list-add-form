{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","pattern","onChange","useState","Math","random","toString","slice","id","touched","setToched","urlError","setUrlError","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","error","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","urlValidator","url","test","handleSubmit","e","preventDefault","state","onSubmit","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7846883.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">\n            {movie.title}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  pattern?: (url: string) => boolean;\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  pattern = () => {},\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const [urlError, setUrlError] = useState(false);\n\n  const hasError = touched && required && !value;\n\n  const onBlur = () => {\n    let error = hasError;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      error = error || !pattern(value);\n\n      setUrlError(error);\n    }\n\n    setToched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => onBlur()}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">\n          {`${label} is required`}\n        </p>\n      )}\n\n      {urlError && (\n        <p className=\"help is-danger\">\n          Please enter valid URL link\n        </p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const urlValidator = (url: string) => pattern.test(url);\n\n  const addButtonValidator = () => {\n    if (title && imgUrl && imdbUrl && imdbId\n      && urlValidator(imdbUrl) && urlValidator(imdbUrl)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const resetForm = () => {\n    setCount(state => (state + 1));\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    resetForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(e) => handleSubmit(e)}\n    >\n      <h2 className=\"title\">\n        Add a movie\n      </h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value=\"\"\n        onChange={() => {}}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        pattern={urlValidator}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        pattern={urlValidator}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={addButtonValidator()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(movie: Movie) => {\n            setMovies((state) => [...state, movie]);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}